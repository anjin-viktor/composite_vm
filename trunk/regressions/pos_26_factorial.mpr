.name numberToStr uint n, array uchar &str_dst
.var
    uchar tmp
    uint m
    uint size 1
    uint m_
    array uchar str 0
.begin
    cmp n, 0
    jne l1

    rsz str_dst, 1
    mov str_dst[0], 48
    jmp lend


l1:
    rsz str, size

    mov m, n
    mod n, 10
    add n, 48

    sub size, 1
    stel (uchar)n, str, size
    add size, 2

    mov n, m
    div n, 10
    cmp n, 0
    jne l1 

    sub size, 1
    rsz str_dst, size

    mov m, 0

l2:
    cmp m, size
    je lend


    mov m_, size
    sub m_, m
    sub m_, 1

    gtel tmp, str, m_
    stel tmp, str_dst, m

    gtel tmp, str, m
    stel tmp, str_dst, m_


    add m, 1
    jmp l2

lend:
.end



.name factorial uint &res, uchar n
.var
.begin
	mov res, 1

l:
	cmp n, 0
	je end

	mul res, (uint)n
	sub n, 1
	jmp l

end:
.end



.name main
.var
	uchar n
	uint res 0
	array uchar str 0
.begin

	mov n, 12

	call factorial, res, n
	call numberToStr, res, str
	aout str

	mov n, 0
	call factorial, res, n
	call numberToStr, res, str
	aout str

	mov n, 0
	call factorial, res, n
	call numberToStr, res, str
	aout str

	mov n, 5
	call factorial, res, n
	call numberToStr, res, str
	aout str


.end



